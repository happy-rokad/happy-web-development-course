import { createSlice } from '@reduxjs/toolkit';

const cartSlice = createSlice({

    name: 'cart',
    initialState: {
        items: [], // Start with an empty cart
    },
    reducers: {
        addToCart(state, action) {
            const newItem = action.payload;

            // Check if item already exists in cart
            const existingItem = state.items.find(item => item.id === newItem.id);

            if (existingItem) {
                // If item exists, increase the quantity
                existingItem.quantity += newItem.quantity;
            } else {
                // Otherwise, add the item to the cart with the initial quantity
                state.items.push({ ...newItem, quantity: newItem.quantity || 1 });
            }

            // Update localStorage
            const userEmail = JSON.parse(localStorage.getItem('user'))?.email;
            if (userEmail) {
                localStorage.setItem(`cart_${userEmail}`, JSON.stringify(state.items));
            }
        },
        removeFromCart(state, action) {
            state.items = state.items.filter(item => item.id !== action.payload.id);

            // Update localStorage with the modified cart
            const userEmail = JSON.parse(localStorage.getItem('user'))?.email;
            if (userEmail) {
                localStorage.setItem(`cart_${userEmail}`, JSON.stringify(state.items));
            }
        },
        updateCartFromStorage(state, action) {
            state.items = action.payload; // Update cart from localStorage
        },
        resetCart(state) {
            state.items = []; // Reset the cart in Redux state
        },
    },
});

export const { addToCart, removeFromCart, updateCartFromStorage, resetCart } = cartSlice.actions;
export default cartSlice.reducer;
